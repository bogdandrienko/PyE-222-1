Организационные:
* Выдаю задание на дипломный проект(Тех.задание)
* сначала экзамен(двое, один в дискорде, теория - 60 минут(лёгкий, средний сложный), практика 60 минут)
* на экзамене присутствует кто хочет

- нужно 80% домашек (если не сдадите, будут переносить)
* Дипломный проект(двое по 60 минут: показ работы, архитектура, логика(код), + вопросы)
* на защите присутствует кто хочет
* любые вопросы сразу мне писать

* Суть дипломного проекта: итог всего курса (максимум всех предметов)

https://youtu.be/Qy76HUfDcNA
250к р. на руки

https://www.youtube.com/watch?v=Nh_Mdwd_m5A&ab_channel=BogdanAndrienko
120к р. на руки (алгоритм two pointers)
https://www.youtube.com/watch?v=Pp84Sv041xA&t=18594s&ab_channel=%D0%93%D0%BB%D0%B5%D0%B1%D0%9C%D0%B8%D1%85%D0%B0%D0%B9%D0%BB%D0%BE%D0%B2



Тех.задание:

ПО:
Ubuntu-server(hosting + domain + https)
PostgreSQL
Redis
Celery
(optional) Docker

Идея: Корпоративное приложение
* выгрузка в excel
* отправка писем
* онлайн чат
* парсинг криптовалюты

У нас закрытая система, поэтому есть меню, где модератор может создать аккаунт пользователю
0) CRUD + auth. Показываем без регистрации только главную страницу.

* У нас крупная логистическая компания, много потерь. Мы ждём от коллег идей по улучшению бизнес-процессов:
1) Бизнес проекты (CRUD) - auth BusIdea(title, description, image, file, datetime...) + лайки, комментарии, список лидеров

* У высокий уровень текучки из-за сложности, но много людей хотят к нам на работу, нужно это оцифровать
2.1) Система публикации вакансий(от HR, CRUD)
2.2) Цифровая база резюме (от HR, CRUD) + нужен рейтинг и отзыв по соискателю

* У наших клиентов много вопросов, поэтому мы хотим давать им ссылку на персональный чат
3) Онлайн чат

* У нас есть дочерняя компания, занимающаяся сбытом, нужно оптимизировать деятельность
4) Система учёта товаров (CRUD) + django-grappelli

* Нам нужна интеграция с чужой api
5.1) Вывод на главную страницу сайта новостей с другого сайта, через КЭШ
5.2) Товары могут приходить из системы 1С, это может быть файл excel. Либо просто json-массив.
+ drf + drf-yasg

* Раз в сутки, начальник хочет получать по почте pdf документ, со списком всех товаров.
И текстовые данные хочет видеть в бот
6.1) Настройка celery
6.2) Настройка бота
Сначала просто создать бота.
Потом заставьте питон посылать боту сообщение.
Потом заставьте бота посылать сообщения людям.
Заставить питон посылать уже нужные в бота.
Заставить это делать каждый час.

Дополнительно:
* Git
* Trello/Jira
*

ТЕХНИЧЕСКОЕ ЗАДАНИЕ
Чистый код
Написание кода на Python должно соблюдать PEP8. К каждой функции и классу делать docstring.
+ black





Навигационное меню
Должно содержать навбар со всеми ссылками на основные маршруты приложения.

Файлы
Все статические файлы должны собираться в одну директорию.

Функционал
Для финального проекта нам нужно использовать максимум навыков и знаний, что мы получили в течении курса. Что нам нужно:
1)	Расширенная модель пользователей, т.к. стандартная уж очень «скудная». Подключение сигналов для моделей.
2)	Использование backend + frontend и django MVT подходов. Т.е. django-rest-framework в связке с одним из популярных фронтент фреймворков обеспечить должный уровень «красочности», а более «утилитарные» функции можно поручить стандартному шаблонизатору django.
3)	Стандартный шаблонизатор должен содержать как собственные теги и фильтры, так и пагинацию «из коробки».
4)	Самый продвинутый из способов аутентификации для frontend-а, - токены.
5)	Наличие загружаемых и выгружаемых файлов, будь то изображения или файлы pdf/xlsx.
6)	Использование и контроллеров функций и контроллеров классов(30% + DetailView, ListView). Дополнение примитивных функций миксинами.
7)	Сериализация и валидация данных.
8)	Использование самого мощного из примеров SQL – PostgreSQL и подключение его к проекту.
9)	Маршрутизация в формате регулярных выражений, ака «regex».
10)	Настройка проекта к публикации, использование виртуальных сред. Подготовка к развёртыванию на «современной и свежей» Ubuntu. Настройка виртуальной машины, uvicorn / gunicorn и nginx.

Список используемых библиотек:
•	django
•	pillow
•	django-environ
•	django-grappelli
•	django-cors-headers
•	djangorestframework
•	djangorestframework-simplejwt
•	openpyxl
•	psycopg2
•	requests
•	gunicorn

Отправка, редактирование, просмотр списка с пагинацией и детального отображения моделей. Также можно будет просматривать, удалять и отправлять связанные модели к основным моделей.
Стили bootstrap и иконки fontavesome, шрифты новые любые на выбор и обязательно задний фон изображением.
Реализовать систему регистрации и авторизации, доступ к функционалу только после успешного входа.
